openapi: 3.0.1
info:
  version: 2.0.0
  title: Threat designer APIs
  description: Threat designer api
security:
  - LambdaAuthorizer: []
x-amazon-apigateway-request-validators:
  validateBodyAndParams:
    validateRequestBody: true
    validateRequestParameters: true
  validateParams:
    validateRequestBody: false
    validateRequestParameters: true
x-amazon-apigateway-gateway-responses:
  ACCESS_DENIED:
    statusCode: 403
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "method.request.header.Origin"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Authorization,Content-Type,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
      gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
    responseTemplates:
      application/json: |-
        {
          "message": "$context.authorizer.errorMessage",
          "code":  "Forbidden"
        }
  UNAUTHORIZED:
    statusCode: 401
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "method.request.header.Origin"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Authorization,Content-Type,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
      gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
    responseTemplates:
      application/json: |-
        {
          "message": "Unauthorized. Session potentially expired.",
          "code":  "Unauthorized"
        }
  BAD_REQUEST_PARAMETERS:
    statusCode: 400
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "method.request.header.Origin"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Authorization,Content-Type,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
      gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
    responseTemplates:
      application/json: |-
        {
          "message": "$context.error.validationErrorString",
          "code":  "BadRequestParams"
        }
  BAD_REQUEST_BODY:
    statusCode: 400
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "method.request.header.Origin"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Authorization,Content-Type,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
      gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
    responseTemplates:
      application/json: |-
        {
          "message": "$context.error.validationErrorString",
          "code":  "BadRequestBody"
        }
paths:
  "/threat-designer/status/{id}":
    get:
      summary: Fetch Threat modeling statuses
      description: Fetch Threat modeling status
      tags:
        - Security
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER
    options:
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
      security: []
      tags:
        - CORS (Options)
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/mcp/status/{id}":
    get:
      summary: Fetch Threat modeling statuses (MCP)
      description: Fetch Threat modeling status (MCP)
      tags:
        - Security
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/restore/{id}":
    put:
      summary: Restore previous threat model
      description: Restore previous threat model
      tags:
        - Security
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER
    options:
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
      security: []
      tags:
        - CORS (Options)
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/mcp/restore/{id}":
    put:
      summary: Restore previous threat model (MCP)
      description: Restore previous threat model (MCP)
      tags:
        - Security
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/trail/{id}":
    get:
      summary: Fetch Threat modeling reasoning trail
      description: Fetch Threat modeling reasoning trail
      tags:
        - Security
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER
    options:
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
      security: []
      tags:
        - CORS (Options)
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/mcp/trail/{id}":
    get:
      summary: Fetch Threat modeling reasoning trail (MCP)
      description: Fetch Threat modeling reasoning trail (MCP)
      tags:
        - Security
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/all":
    get:
      summary: Fetch all threat models for a given user
      description: Fetch all threat models for a given user
      tags:
        - Security
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER
    options:
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
      security: []
      tags:
        - CORS (Options)
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/mcp/all":
    get:
      summary: Fetch all threat models for a given user (MCP)
      description: Fetch all threat models for a given user (MCP)
      tags:
        - Security
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer":
    post:
      summary: Submit Threat modeling
      description: Submit Threat modeling
      tags:
        - Security
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER
    options:
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
      security: []
      tags:
        - CORS (Options)
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/mcp":
    post:
      summary: Submit Threat modeling (MCP)
      description: Submit Threat modeling (MCP)
      tags:
        - Security
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/download":
    post:
      summary: Generates download presigned-url
      description: Generates download presigned-url
      tags:
        - Security
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER
    options:
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
      security: []
      tags:
        - CORS (Options)
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/mcp/download":
    post:
      summary: Generates download presigned-url (MCP)
      description: Generates download presigned-url (MCP)
      tags:
        - Security
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/upload":
    post:
      summary: Generates presigned-url
      description: Generates presigned-url
      tags:
        - Security
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER
    options:
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
      security: []
      tags:
        - CORS (Options)
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/mcp/upload":
    post:
      summary: Generates presigned-url (MCP)
      description: Generates presigned-url (MCP)
      tags:
        - Security
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/{id}":
    get:
      summary: Fetch Threat modeling details
      description: Fetch Threat modeling details
      tags:
        - Security
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER
    put:
      summary: Update Threat modeling
      description: Update Threat modeling
      tags:
        - Security
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER
    delete:
      summary: Delete Threat model
      description: Delete Threat model
      tags:
        - Security
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER
    options:
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
      security: []
      tags:
        - CORS (Options)
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

  "/threat-designer/mcp/{id}":
    get:
      summary: Fetch Threat modeling details (MCP)
      description: Fetch Threat modeling details (MCP)
      tags:
        - Security
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER
    put:
      summary: Update Threat modeling (MCP)
      description: Update Threat modeling (MCP)
      tags:
        - Security
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER
    delete:
      summary: Delete Threat model (MCP)
      description: Delete Threat model (MCP)
      tags:
        - Security
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMetrics"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${lambda_arn}"
        connectionType: "INTERNET"
        contentHandling: CONVERT_TO_TEXT
        passthroughBehavior: NEVER

components:
  schemas:
    SecurityMetrics:
      type: object
      additionalProperties: {}
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
          description: Error message friendly enough to be presented on user interfaces
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Client Errors
      headers:
        Access-Control-Allow-Headers:
          schema:
            type: string
        Access-Control-Allow-Origin:
          schema:
            type: string
    "500":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Server Errors
      headers:
        Access-Control-Allow-Headers:
          schema:
            type: string
        Access-Control-Allow-Origin:
          schema:
            type: string
  securitySchemes:
    LambdaAuthorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: "custom"
      x-amazon-apigateway-authorizer:
        identitySource: "method.request.header.authorization"
        authorizerUri: ${authorizer_arn}
        authorizerResultTtlInSeconds: 0
        type: token
        enableSimpleResponses: true
        resultTtlInSeconds: 0
        authorizerPayloadFormatVersion: "2.0"
    ApiKeyAuth:
      type: apiKey
      name: x-api-key
      in: header
